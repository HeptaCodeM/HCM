<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hcm.grw.model.mapper.ChatDaoImpl">

	<!-- 메시지 보내기 -->
	<insert id="sendMessage">
		INSERT INTO CHAT (CH_NO, CH_MESSAGE, CH_SENDER, CH_TARGET)
			VALUES ((SELECT NVL(MAX(CH_NO)+1, '1') FROM CHAT), #{ch_message}, #{ch_sender}, #{ch_target})
	</insert>
	
	<!-- 대화목록 불러오기 -->
	<select id="selectAllMessage" resultType="ChatDto">
		SELECT c.*, e1.EMPL_NAME sender_name, e2.EMPL_NAME target_name
			FROM CHAT c JOIN EMPLOYEE e1
			ON c.CH_SENDER = e1.EMPL_ID
			JOIN EMPLOYEE e2
			ON c.CH_TARGET = e2.EMPL_ID
			WHERE (CH_SENDER = #{ch_sender}
			AND CH_TARGET = #{ch_target})
			OR (CH_SENDER = #{ch_target}
			AND CH_TARGET = #{ch_sender})
			ORDER BY c.CH_DATE
	</select>
	
	<!-- 대화 읽음 처리 -->
	<update id="setReadMessage">
		UPDATE CHAT SET CH_SET = 'N'
		WHERE CH_TARGET = #{ch_target}
		AND CH_SENDER = #{ch_sender}
	</update>

	<!-- 안읽은 대화 표시 -->
	<select id="noReadList" resultType="Integer">
		SELECT COUNT(*)
			FROM CHAT c 
			WHERE CH_TARGET = #{ch_target}
			AND CH_SENDER = #{ch_sender}
			AND CH_SET = 'Y'
	</select>
	
	<!-- 유저 목록 정렬을 위한 모든유저 불러오기 -->
	<select id="chatUserList" resultType="ChatDto">
		SELECT CH_NO, CH_MESSAGE, CH_SENDER, sub.EMPL_NAME, DEPT_NAME , RANK_NAME , sub.EMPL_EMAIL,
		    CH_TARGET, CH_DATE, CH_SET
		FROM (
		    SELECT 
		        CH_NO, CH_MESSAGE, CH_SENDER, EMPL_EMAIL,
		        CH_TARGET, CH_DATE, CH_SET, EMPL_NAME, c1.COCO_NAME AS DEPT_NAME , c2.COCO_NAME AS RANK_NAME,
		        ROW_NUMBER() OVER (PARTITION BY CH_SENDER ORDER BY CH_DATE DESC) AS rn
		    FROM CHAT
		    INNER JOIN EMPLOYEE e ON CH_SENDER = EMPL_ID
			INNER JOIN COMMON_CODE c1 ON e.EMPL_DEPT_CD = c1.COCO_CD
			INNER JOIN COMMON_CODE c2 ON e.EMPL_RANK_CD = c2.COCO_CD
			WHERE CH_TARGET = #{ch_target}
			) sub
		WHERE rn = 1
		UNION
		SELECT CH_NO, CH_MESSAGE, CH_SENDER, EMPL_NAME, cc.COCO_NAME AS DEPT_NAME , cc2.COCO_NAME AS RANK_NAME , EMPL_EMAIL,
		    CH_TARGET, NVL(CH_DATE, '2020-12-12'), CH_SET
		FROM CHAT c 
		RIGHT JOIN EMPLOYEE e ON c.CH_SENDER = e.EMPL_ID 
		JOIN COMMON_CODE cc ON e.EMPL_DEPT_CD = cc.COCO_CD 
		JOIN COMMON_CODE cc2 ON e.EMPL_RANK_CD = cc2.COCO_CD 
		WHERE c.CH_SENDER IS NULL
		ORDER BY CH_DATE DESC;
	</select>
	
</mapper>
